#pragma once

#include <vector>
#include <memory>

#include "BaseCommand.h"

enum class InputState
{
	Pressed = 1,
	Down = 2,
	Up = 3,
};

struct InputCommand
{
public:
	unsigned int Button{};
	InputState InputState{};
	std::vector<BaseCommand*> pCommands{};
	std::vector<std::shared_ptr<BaseCommand>> spCommands{};
};

enum class ApplicationController
{
	DPadNorth,
	DPadSouth,
	DPadWest,
	DPadEast,
	SpecialButtonRight,
	SpecialButtonLeft,
	ThumbstickLeft,
	ThumbstickRight,
	BumperLeft,
	BumperRight,
	ButtonSouth,
	ButtonEast,
	ButtonWest,
	ButtonNorth,
};

enum class PS4Controller
{
	DPadUp,
	DPadDown,
	DPadLeft,
	DPadRight,
	Options,
	Share,
	L3,
	R3,
	L1,
	R1,
	Cross,
	Circle,
	Square,
	Triangle,
};

enum class XBoxController
{
	DPadUp,
	DPadDown,
	DPadLeft,
	DPadRight,
	Start,
	Back,
	LeftStickButton,
	RightStickButton,
	LeftBumper,
	RightBumper,
	A,
	B,
	X,
	Y,
};

enum class SwitchController
{
	DirectionalUp,
	DirectionalDown,
	DirectionalLeft,
	DirectionalRight,
	Plus,
	Minus,
	LeftStickButton,
	RightStickButton,
	L,
	R,
	B,
	A,
	Y,
	X,
};

enum class ApplicationKeyboard
{
	A,
	B,
	C,
	D,
	E,
	F,
	G,
	H,
	I,
	J,
	K,
	L,
	M,
	N,
	O,
	P,
	Q,
	R,
	S,
	T,
	U,
	V,
	W,
	X,
	Y,
	Z,
	One,
	Two,
	Three,
	Four,
	Five,
	Six,
	Seven,
	Eight,
	Nine,
	Zero,
	Minus,
	Equals,
	SquareBracketOpen,
	SquareBracketClose,
	Semicolon,
	Quote,
	Comma,
	Period,
	SlashForward,
	SlashBackward,
	F1,
	F2,
	F3,
	F4,
	F5,
	F6,
	F7,
	F8,
	F9,
	F10,
	F11,
	F12,
	NumPad_NumLock,
	NumPad_Divide,
	NumPad_Multiply,
	NumPad_Minus,
	NumPad_Plus,
	NumPad_Enter,
	NumPad_Comma,
	NumPad_0,
	NumPad_1,
	NumPad_2,
	NumPad_3,
	NumPad_4,
	NumPad_5,
	NumPad_6,
	NumPad_7,
	NumPad_8,
	NumPad_9,
	Escape,
	Grave,
	Tab,
	CapsLock,
	ShiftLeft,
	ShiftRight,
	ControlLeft,
	ControlRight,
	WindowsLeft,
	WindowsRight,
	AltLeft,
	AltRight,
	Space,
	Enter,
	Backspace,
	ArrowUp,
	ArrowDown,
	ArrowLeft,
	ArrowRight,
	PrintScreen,
	ScrollLock,
	Pause,
	Insert,
	Home,
	PageUp,
	Delete,
	End,
	PageDown,
};